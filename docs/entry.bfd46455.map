{"version":3,"sources":["src/Game.ts","src/Figure.ts","src/utils.ts","src/Snake.ts","src/drawers.ts","src/main.ts","src/entry.ts"],"names":[],"mappings":"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,GAAY,EJsEjB,QItEkB,IAAD,EAAW,OJsE5B,CAAA,WAAA,CAAA;AAAA,AIrEC,QAAA,IJqEC,EIrED,IJqEC,CIrED,EJqEC,CIrED,EJqED;AAAA,AIrEC,QAAK,IJqEC,IIrED,EJqEC,GAAA,AIrED,GJqEN,EIrEC;AJuEP,AIvEO,QAAY,OJuEZ,EIvEY,KAAA,MAAZ;AJwEN,AItEF,QAAI,OJsEC,EItEL,GAAgB,CJsEL,KAAK,EItEA,GAAA,CAAI,EJqEZ,CIrEQ,EAAS,EAAT,EAAa,EAAb,CAAhB;AJuEE,AIrEF,QAAI,OJqEC,CIrEL,CAAa,CAAb,EAAgB,CJqEL,AIrEX,EAAmB,GJqEH,EIrEQ,MJmEhB,EInER,EAAkC,MAAlC;AHlBD,ADwFG,AIrEF,IHnBD,IGmBK,KHnBL,GGmBC,CAAa,CAAb,CJqES,CIrEO,CAAhB,EAAmB,CJqEL,ECxFf,EGmBC,EAA0B,EJkElB,GIlEuB,GHnBhC,KGmBC;AHnBD,ADyFG,AIpEF,QAAI,KHrBL,GGqBC,CAAa,EHrBd,CDyFW,ECzFX,GDyFgB,AIpEM,KAAK,QAA1B,EAAoC,CAApC,EAAuC,KAAK,QAA5C,EAAsD,MAAtD;AHpBA,ADoFQ,AI/DR,QAAI,CJ+DH,ICpFD,GGqBA,CHrBA,AGqBa,CAAb,EHrBsB,AGqBN,EHrBhB,OGqByB,KAAK,QAA9B,EAAwC,KAAxC,EAA+C,KAAK,QAApD;AHpBA,ADyFC,AIpED,CAVY,IJkEZ;AC7ED,AD0FA,AInEa,QAAA,GHvBb,AD0FA,IAAA,EC1FA,IGuBa,GAAgB,UAC5B,GAD4B,EAE5B,KAF4B,EAG5B,KAH4B,EAGd;AH5Bf,AD0BA,AIEC,CH5BD,AD0BA,EC1BA,AD0BA,KIEC,UAAA,KAAA,CAAA,EAAA;AH5BY,AD0BA,AIEZ,QH5BY,AD0BA,IAAA,EC1BA,CD0BA,CIEZ,CH5BY,ED0BA,GIEZ,CH5BY;AG4BE;AAEd,QAAI,SAAJ,GAAgB,KAAhB;AACA,QAAI,QAAJ,CAAa,MAAM,CAAnB,EAAsB,MAAM,CAA5B,EAA+B,MAAM,KAArC,EAA4C,MAAM,MAAlD;AACA,CAPY;AASA,QAAA,SAAA,GAAY,UAAC,IAAD,EAAa,KAAb,EAAyB;AACzC,QAAA,MAAA,KAAA,GAAA;AACA,QAAA,KAAA,MAAA,IAAA;AAAA,QAAA,OAAA,OAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AACR,QAAI,SAAJ,GAAgB,MAAM,KAAtB;AAEA,SAA4B,IAAA,KAAA,CAAA,EAAA,SAAA,IAA5B,EAA4B,KAAA,OAAA,MAA5B,EAA4B,IAA5B,EAAkC;AAA7B,YAAI,kBAAe,OAAA,EAAA,CAAnB;AACJ,YAAM,YAAuB,KAAK,iBAAL,CAAuB,eAAvB,CAA7B;AACA,gBAAA,aAAA,CAAc,KAAK,GAAnB,EAAwB,SAAxB,EAAmC,MAAM,KAAzC;AACA;AACD,CATY;;;;;AClCb,IAAA,SAAA,QAAA,QAAA,CAAA;AACA,IAAA,UAAA,QAAA,SAAA,CAAA;AACA,IAAA,YAAA,QAAA,WAAA,CAAA;AAEa,QAAA,YAAA,GAAe,YAAA;AAC3B,WAAmB,SAAS,cAAT,CAAwB,MAAxB,CAAnB;AAAkD,CADtC;AAGb,IAAM,qBAAqB,SAArB,kBAAqB,GAAA,CAAQ,CAAnC;AAEA,IAAM,MACL,QAAA,YAAA,GAAe,UAAf,CAA0B,IAA1B,CADD;AAIA;AACA,IAAM,OAAO,IAAI,OAAA,IAAJ,CAAS,GAAT,CAAb;AACA,IAAM,SAAS,IAAI,QAAA,KAAJ,CAAU,IAAV,CAAf;AAEA,SAAS,gBAAT,CAA0B,SAA1B,EAAqC,UAAC,KAAD,EAAqB;AACzD,WAAA,OAAO,eAAP,CAAuB,MAAM,OAA7B,CAAA;AAAqC,CADtC;AAIA,IAAM,SAAS,SAAT,MAAS,GAAA;AACd,WAAO,MAAP;AAEA,cAAA,WAAA,CAAY,IAAZ;AACA,cAAA,cAAA,CAAe,IAAf;AACA,cAAA,SAAA,CAAU,IAAV;AAEA,cAAA,SAAA,CAAU,IAAV,EAAgB,MAAhB;AACA,CARD;AAUa,QAAA,IAAA,GAAO,YAAA;AAAM,WAAA,YAAY,OAAO,qBAAP,CAA6B,QAAA,IAA7B,CAAZ;AAA8C,CAA3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AH/BA,QAAA,GAAA,GAAM,UAAC,CAAD,EAAgB,CAAhB,EAA+B,CAA/B,EAA4C;AAA3C,QAAA,MAAA,KAAA,CAAA,EAAA;AAAA,YAAA,CAAA;AAAa;AAAE,QAAA,MAAA,KAAA,CAAA,EAAA;AAAA,YAAA,CAAA;AAAa;AAAE,QAAA,MAAA,KAAA,CAAA,EAAA;AAAA,YAAA,CAAA;AAAa;AAC9D,WAAA,SAAO,CAAP,GAAQ,IAAR,GAAa,CAAb,GAAc,KAAd,GAAoB,CAApB,GAAqB,IAArB;AAAyB,CADb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,IAAA,WAAA,QAAA,UAAA,CAAA;AACA,IAAA,SAAA,QAAA,QAAA,CAAA;AACA,IAAA,UAAA,QAAA,SAAA,CAAA;AAEA,IAAA,QAAA,aAAA,UAAA,MAAA,EAAA;AAA2B,cAAA,KAAA,EAAA,MAAA;AAO1B,aAAA,KAAA,CAAY,IAAZ,EAAsB;AAAtB,YAAA,QACC,OAAA,IAAA,CAAA,IAAA,KAAO,IADR;AANA,cAAA,MAAA,GAAiB,CAAjB;AACA,cAAA,MAAA,GAAiB,CAAjB;AACA,cAAA,KAAA,GAAgB,QAAA,GAAA,CAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CAAhB;AACA,cAAA,KAAA,GAAgB,MAAhB;AAKC,cAAK,IAAL,GAAY,IAAZ;;AACA;AAED,UAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACC,aAAK,IAAL,GAAY,KAAK,IAAL,CAAU,GAAV,CACX,UAAC,YAAD,EAAqB;AACpB,mBAAA,eACA,eAAe,MAAK,MADpB,GAEA,eAAe,MAAK,MAApB,GAA6B,MAAK,IAAL,CAAU,IAFvC;AAE2C,SAJjC,CAAZ;AAMA,KAPD;AASA,UAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,SAAhB,EAAoC;AACnC,YAAI,cAAc,OAAA,SAAA,CAAU,IAA5B,EAAkC;AACjC,iBAAK,MAAL,GAAc,CAAd;AACA,iBAAK,MAAL,GAAc,KAAK,KAAnB;AACA;AAED,YAAI,cAAc,OAAA,SAAA,CAAU,EAA5B,EAAgC;AAC/B,iBAAK,MAAL,GAAc,CAAd;AACA,iBAAK,MAAL,GAAc,CAAC,KAAK,KAApB;AACA;AAED,YAAI,cAAc,OAAA,SAAA,CAAU,IAA5B,EAAkC;AACjC,iBAAK,MAAL,GAAc,CAAC,KAAK,KAApB;AACA,iBAAK,MAAL,GAAc,CAAd;AACA;AAED,YAAI,cAAc,OAAA,SAAA,CAAU,KAA5B,EAAmC;AAClC,iBAAK,MAAL,GAAc,KAAK,KAAnB;AACA,iBAAK,MAAL,GAAc,CAAd;AACA;AACD,KApBD;AAqBD,WAAA,KAAA;AA1CA,CAAA,CAA2B,SAAA,MAA3B,CAAA;AAAa,QAAA,KAAA,GAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGJb,IAAA,SAAA,QAAA,QAAA,CAAA;AACA,OAAA,IAAA","file":"entry.bfd46455.map","sourceRoot":"..","sourcesContent":["export const CELL_SIZE: number = 20\n\nexport enum Direction {\n\tUp = 38,\n\tDown = 40,\n\tLeft = 37,\n\tRight = 39\n}\n\nexport interface GameBlock {\n\tx: number\n\ty: number\n\twidth: number\n\theight: number\n}\n\nexport interface GridPosition {\n\tcol: number\n\trow: number\n\tblockNumber: number\n\tcols: number\n\trows: number\n}\n\nexport interface GameConstraints extends GameBlock {}\n\nexport class Game {\n\tctx: CanvasRenderingContext2D\n\tcellSize: number = CELL_SIZE\n\n\tconstructor(ctx: CanvasRenderingContext2D) {\n\t\tthis.ctx = ctx\n\t}\n\n\tget width(): number {\n\t\treturn this.ctx.canvas.width\n\t}\n\n\tget height(): number {\n\t\treturn this.ctx.canvas.height\n\t}\n\n\tget rows(): number {\n\t\treturn this.height / this.cellSize\n\t}\n\n\tget cols(): number {\n\t\treturn this.width / this.cellSize\n\t}\n\n\tget totalCels(): number {\n\t\treturn this.rows * this.cols\n\t}\n\n\tget constraints(): GameConstraints {\n\t\treturn {\n\t\t\tx: this.cellSize,\n\t\t\ty: this.cellSize,\n\t\t\twidth: this.width - this.cellSize,\n\t\t\theight: this.height - this.cellSize\n\t\t}\n\t}\n\n\tcalculateGridPosition(blockNumber: number): GridPosition {\n\t\tconst { cols, rows } = this\n\t\tconst col = blockNumber % rows\n\t\tconst row = blockNumber === 0 ? 0 : rows / (blockNumber - col)\n\n\t\tconst position: GridPosition = {\n\t\t\tcol,\n\t\t\trow,\n\t\t\tblockNumber,\n\t\t\tcols,\n\t\t\trows\n\t\t}\n\n\t\treturn position\n\t}\n\n\tcalculatePosition(blockNumber: number): GameBlock {\n\t\tblockNumber = parseInt(blockNumber.toString())\n\n\t\tconst constraints: GameConstraints = this.constraints\n\t\tconst { col, row } = this.calculateGridPosition(blockNumber)\n\n\t\treturn {\n\t\t\tx: col * this.cellSize,\n\t\t\ty: row * this.cellSize,\n\t\t\twidth: this.cellSize,\n\t\t\theight: this.cellSize\n\t\t}\n\t}\n}\n","export class Figure {\n\tbody: Array<number> = []\n}\n","export const hsl = (h: number = 0, s: number = 0, l: number = 0): string =>\n\t`hsl(${h}, ${s}%, ${l}%)`\n","import { Figure } from './Figure'\nimport { Game, Direction } from './Game'\nimport { hsl } from './utils'\n\nexport class Snake extends Figure {\n\tspeedX: number = 0\n\tspeedY: number = 0\n\tcolor: string = hsl(163, 50, 49)\n\tspeed: number = 0.0001\n\tgame: Game\n\n\tconstructor(game: Game) {\n\t\tsuper()\n\t\tthis.game = game\n\t}\n\n\tupdate(): void {\n\t\tthis.body = this.body.map(\n\t\t\t(currentBlock: number): number =>\n\t\t\t\tcurrentBlock +\n\t\t\t\tcurrentBlock * this.speedX +\n\t\t\t\tcurrentBlock * this.speedY * this.game.rows\n\t\t)\n\t}\n\n\tchangeDirection(direction: Direction): void {\n\t\tif (direction === Direction.Down) {\n\t\t\tthis.speedX = 0\n\t\t\tthis.speedY = this.speed\n\t\t}\n\n\t\tif (direction === Direction.Up) {\n\t\t\tthis.speedX = 0\n\t\t\tthis.speedY = -this.speed\n\t\t}\n\n\t\tif (direction === Direction.Left) {\n\t\t\tthis.speedX = -this.speed\n\t\t\tthis.speedY = 0\n\t\t}\n\n\t\tif (direction === Direction.Right) {\n\t\t\tthis.speedX = this.speed\n\t\t\tthis.speedY = 0\n\t\t}\n\t}\n}\n","import { Snake } from './Snake'\nimport { Game, GameBlock } from './Game'\nimport { hsl } from './utils'\n\nexport const clearCanvas = (game: Game) =>\n\tgame.ctx.clearRect(0, 0, game.width, game.height)\n\nexport const drawBackground = (game: Game) => {\n\tconst { ctx } = game\n\tctx.fillStyle = hsl(192, 45, 2)\n\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n}\n\nexport const drawWalls = (game: Game) => {\n\tconst { ctx, width, height } = game\n\n\tctx.fillStyle = hsl(112, 50, 63)\n\n\tctx.fillRect(0, 0, game.cellSize, height)\n\tctx.fillRect(0, 0, width, game.cellSize)\n\n\tctx.fillRect(width - game.cellSize, 0, game.cellSize, height)\n\tctx.fillRect(0, height - game.cellSize, width, game.cellSize)\n}\n\nexport const drawGameBlock = (\n\tctx: CanvasRenderingContext2D,\n\tblock: GameBlock,\n\tcolor = '#000'\n): void => {\n\tctx.fillStyle = color\n\tctx.fillRect(block.x, block.y, block.width, block.height)\n}\n\nexport const drawSnake = (game: Game, snake: Snake) => {\n\tconst { ctx } = game\n\tconst { body = [] } = snake\n\tctx.fillStyle = snake.color\n\n\tfor (let chunkCellNumber of body) {\n\t\tconst bodyBlock: GameBlock = game.calculatePosition(chunkCellNumber)\n\t\tdrawGameBlock(game.ctx, bodyBlock, snake.color)\n\t}\n}\n","import { Game } from './Game'\nimport { Snake } from './Snake'\nimport { clearCanvas, drawBackground, drawSnake, drawWalls } from './drawers'\n\nexport const createCanvas = (): HTMLCanvasElement =>\n\t<HTMLCanvasElement>document.getElementById('game')\n\nconst calculateCollision = () => {}\n\nconst ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\n\tcreateCanvas().getContext('2d')\n)\n\n// Setup\nconst game = new Game(ctx)\nconst player = new Snake(game)\n\ndocument.addEventListener('keydown', (event: KeyboardEvent) =>\n\tplayer.changeDirection(event.keyCode)\n)\n\nconst render = (): void => {\n\tplayer.update()\n\n\tclearCanvas(game)\n\tdrawBackground(game)\n\tdrawWalls(game)\n\n\tdrawSnake(game, player)\n}\n\nexport const loop = () => render() && window.requestAnimationFrame(loop)\n","import { loop } from './main'\nloop()\n"]}